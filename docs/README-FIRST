Process Synchronizer
====================
:author: Fabiano Ozahata
:firstname: Fabiano Tsuneo
:lastname: Maurer Ozahata
:email: fabiano.ozahata@gmail.com
:authorinitials: FTMO
:revdate: 2012-05-29
:revnumber: 0.1
:toc:
:icons:
:numbered:

== Introduction
The motivation behind this project started out from the necessity for 
synchronization between two MySQL databases, in which the information
being replicated needed to be properly re-shaped to adapt to the replicated
destination.

In deed, if there is no need for such complex replication methods, a simple
MySQL replication feature should do just fine. Nevertheless, this can also be
used to monitor or adjust to a row/column level on what is supposed to be 
synchronized or replicated to a destination (or multiple destinations). 

== Installing
One time you have this project in your machine, you can decide to put to run in
any place or install in the project in a particular directory and run using 
symlinks.

Because the use of symlinks will make a complex settings we will not discuss in
this page.

=== Running in anyplace
Using the command below will make the program install in the same directory
where the python packages are installed.

Before we install the software, you need install first a aplication that the
help us to install the dependencies of the program, executing the command below:

[source, bash]
---------------------------------------------------------------------
user@machine:~$ sudo apt-get install setuptools
---------------------------------------------------------------------

After you can go to the directory that you get the project and in the directory
that have the file setup.py, execute this information:

[source, bash]
---------------------------------------------------------------------
user@machine:~$ sudo python setup.py install
---------------------------------------------------------------------

In response you will receive a message like this:

[source, bash]
---------------------------------------------------------------------
***********************
---------------------------------------------------------------------

Before you run the application, we need configurate the settings and check if
all dependences that we need are correct installed.

== Tutorial

To make the undestand of process more fast, nothing better that a example of how 
works.

=== Situation

Let's think we have a machine that, in the database, we have a table that have
a lot of fields that each one have important value but for separate applications
but one of them need be update after the row be inserted.

In this example we will use the same database to make easy the understand, but
of course we can set a destination in other database or different machine. 

==== Origin (MySQL database)
[source, sql]
---------------------------------------------------------------------
CREATE TABLE user
{
}
---------------------------------------------------------------------

==== Destination
[source, sql]
---------------------------------------------------------------------
CREATE TABLE user
{
}
---------------------------------------------------------------------

=== Configuration

Before run the application we need configurate a place that we tell to the
aplication where the files are and how is the name for each setting.

First create a directory that we will add the files necessary. The first file 
that the application look is the app.conf

 





